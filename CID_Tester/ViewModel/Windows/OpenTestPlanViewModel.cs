
using CID_Tester.Model;
using CID_Tester.ViewModel.Command;
using CID_Tester.ViewModel.Controls.AddTestPlan;
using System.Windows.Input;

namespace CID_Tester.ViewModel.Windows;

public class OpenTestPlanViewModel : BaseViewModel
{
    private BaseViewModel _windowContent = null!;
    public BaseViewModel WindowContent
    {
        get => _windowContent;
        set
        {
            _windowContent = value;
            onPropertyChanged(nameof(WindowContent));
        }
    }

    public OpenTestPlanViewModel(Store appStore, Action closeDialog, BaseViewModel? defaultContent = null)
    {

        CancelCommand = new RelayCommand((object? obj) => closeDialog());
        SwitchToDatabase = new RelayCommand((object? obj) => WindowContent = new AddTestPlanTableSelectorViewModel(appStore, closeDialog));
        SwitchToCreate = new RelayCommand((object? obj) => WindowContent = new AddTestPlanViewModel(appStore, closeDialog));
        SwitchToImportExcel = new RelayCommand((object? obj) => WindowContent = new AddTestPlanImporterViewModel(appStore, closeDialog));

        if (defaultContent != null) WindowContent = defaultContent;
    }

    public ICommand CancelCommand { get; }
    public ICommand SwitchToDatabase { get; }
    public ICommand SwitchToImportExcel { get; }
    public ICommand SwitchToCreate { get; }


}
